plugins {
    id 'java'
}

group 'com.openclassrooms.concurrency'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

task(runBenchmarks, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.BenchmarkRunner'
    classpath = sourceSets.test.runtimeClasspath
}

task(runSingleProcess, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.multiprocess.app.PlanetTemperatureAnalyzer'
    classpath = sourceSets.main.runtimeClasspath
    args 'all-planets.csv'
}

task(runMultiProcess, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.multiprocess.app.PlanetTemperatureAnalyzerParallel'
    classpath = sourceSets.main.runtimeClasspath
    args = ["last-55820.csv", "first-55820.csv"]
}

task(runParallelStreams, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.parallelstreams.app.PlanetTemperatureAnalyzerUsingParallelStreams'
    classpath = sourceSets.main.runtimeClasspath
    args = ["all-planets.csv"]
}

task(runRawThreads, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.threads.app.ThreadBasedPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["last-55820.csv", "first-55820.csv"]
}

task(runFutures, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.futures.app.FutureBasedPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["last-55820.csv", "first-55820.csv"]
}

task(runAtomics, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.atomic.app.AtomicBasedPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["last-55820.csv", "first-55820.csv"]
}

task(runReentrantLocks, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.reentrantlocks.app.ReentrantLockBasedPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["last-55820.csv", "first-55820.csv"]
}

task(runSemaphores, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.semaphores.app.SemaphorePlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["lots-of-inputs"]
}

task(runCountdownLatches, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.countdownlatches.app.CountdownLatchPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["lots-of-inputs"]
}

task(runCompletableFutures, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.completablefutures.app.CompletableFuturePlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["lots-of-inputs"]
}

task(runForkJoinTask, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.forkjoin.app.ForkJoinPlanetAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["lots-of-inputs"]
}

task(runBlockingQueue, dependsOn: 'classes', type: JavaExec) {
    main = 'com/openclassrooms/concurrency/planetbrain/blockingqueues/app/BlockingQueuePlanetTemperatureApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["even-more-inputs"]
}

task(runHashMaps, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.concurrenthashmap.app.ThreadSafeMapAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["even-more-inputs", "CONCURRENT_HASHMAP"]
}

task(runCoWArrayList, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.copyonwritearraylist.app.CoWArrayListAnalyzerApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["even-more-inputs", "CONCURRENT_HASHMAP"]
}

task(runRxJava, dependsOn: 'classes', type: JavaExec) {
    main = 'com.openclassrooms.concurrency.planetbrain.reactivejava.app.ReactivePlanetAveragingApp'
    classpath = sourceSets.main.runtimeClasspath
    args = ["all-planets.csv"]
}

defaultTasks 'runSingleProcess'

test {
    useJUnitPlatform()
}
dependencies {
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.0.1'
    compile group: 'org.reactivestreams', name: 'reactive-streams', version: '1.0.0'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
    testImplementation 'org.openjdk.jmh:jmh-core:1.21'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
    testImplementation 'org.hamcrest:hamcrest:2.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}
